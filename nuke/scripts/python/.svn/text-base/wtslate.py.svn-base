# writeDPX, slate and writeJPG generator v0.1 alpha
# 1. delete the old write_DPX, slate and write_Latest nodes
# 2. click on the last node in your comp (select it)
# 3. execute script

import os
import nuke
import string
import sys

this_filename = sys._getframe().f_code.co_filename
print('Loading '+this_filename)

def jobForCurrentFile():
	curfile=nuke.knob('root.name')
	if curfile != '':
		parts=curfile.split('/')
		return parts[2]

def shotForCurrentFile():
	curfile=nuke.knob('root.name')
	if curfile != '':
		parts=curfile.split('/')
		return parts[4]

def rootNameOfCurrentFile():
	curfile=nuke.knob('root.name')
	if curfile != '':
		parts=curfile.split('/')
		length=len(parts)
		tmp=parts[length-1]
		root=tmp.split('.')
		return root[0]

def wtslate():
	root=rootNameOfCurrentFile()
	job=jobForCurrentFile()
	shot=shotForCurrentFile()
	if root == None:
		raise RuntimeError(this_filename+"\nwtslate() : Save your nuke script first!")
	if job == None:
		raise RuntimeError(this_filename+"\nwtslate() : can't figure out job!")
	if shot == None:
		raise RuntimeError(this_filename+"\nwtslate() : can't figure out shot!")
#	comp_dir='/jobs/'+job+'/shots/'+shot+'/images/comp/'+root
#	if not os.path.exists(comp_dir):
#		os.mkdir(comp_dir)
	a="[file dirname [value root.name]]/../../images/comp/[file rootname [file tail [value root.name]]]/[file rootname [file tail [value root.name]]].%04d.dpx"
	b="[file rootname [file tail [value root.name]]].[frame].dpx"
	c="[file dirname [value root.name]]/../../images/comp/latest/[lindex [split [value root.name] /] 4]_comp_latest.%04d.jpg"
	nuke.nodes.Write(name="Write_DPX",file=a,colorspace="rec709").setInput(0,nuke.selectedNode())
	nuke.toNode('Write_DPX').knob('selected').setValue(True)
#	tn = nuke.nodes.Text (name="Slate", font="/usr/share/fonts/bitstream-vera/Vera.ttf", yjustify = "center")
#	tn['box'].setValue([0,0,2048,1168])
#	tn['translate'].setValue([50, -550])
#	tn['size'].setValue(25)
#	tn['message'].setValue(b)
#	tn.setInput(0,nuke.selectedNode())
	nuke.nodes.Write(name="Write_Latest",file=c,colorspace="rec709").setInput(0,nuke.selectedNode())
	nuke.toNode('Write_DPX').knob('selected').setValue(True)

